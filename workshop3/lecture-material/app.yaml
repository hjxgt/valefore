apiVersion: apps/v1
kind: Deployment
metadata:
  name: task1-app-deploy
  labels:
    name: task1-app-deploy
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: task1-app-pod
  template:
    metadata:
      name: task1-app-pod
      labels:
        name: task1-app-pod
    spec:
      serviceAccountName: defaultsvcacc
      volumes:
      - name: config-vol
        configMap: 
          name: config-cm
      - name: tmp-vol
        emptyDir: {}
      # - name: hostdir-vol
      #   hostPath:
      #     path: /opt/tmp
      containers:
      - name: task1-app-container
        image: stackupiss/bgg-backend:v1
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: bgg-cm
        - secretRef:
            name: bgg-secret
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000 
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: config-vol
          mountPath: /app/config
          readOnly: true
        - name: tmp-vol
          mountPath: /opt/tmp

---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc
  labels:
    name: bggapp-svc
spec:
  type: LoadBalancer
  selector:
    name: task1-app-pod
  ports:
  - port: 3000
    targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ing
  labels:
    name: app-ing
spec:
  ingressClassName: nginx
  rules:
  - host: app-146.190.202.84.nip.io
    http: 
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bggapp-svc
            port:
              number: 3000


