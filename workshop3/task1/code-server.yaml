---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ws3-pvc
  labels:
    name: wc3-pvc
  namespace: ws3
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests: 
      storage: 1Gi
  storageClassName: do-block-storage-xfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws3-cs-deploy
  labels:
    name: ws3-cs-deploy
    app: codeserver
  namespace: ws3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codeserver
      name: ws3-cs-pod
  template:
    metadata:
      name: ws3-cs-pod
      labels:
        name: ws3-cs-pod
        app: codeserver
    spec:
      volumes:
      - name: ws3-vol
        persistentVolumeClaim:
          claimName: ws3-pvc
      containers:
        - name: ws3-cs-container
          image: linuxserver/code-server:4.9.1
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: ws3-cm
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: ws3-vol
              mountPath: /config/workspace
---
apiVersion: v1
kind: Service
metadata:
  name: ws3-cs-svc
  labels:
    name: ws3-cs-svc
    app: codeserver
  namespace: ws3
spec:
  type: ClusterIP
  selector:
    name: ws3-cs-pod
    app: codeserver
  ports:
  - port: 8443
    targetPort: 8443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws3-cs-ing
  labels:
    name: ws3-cs-ing
    app: codeserver
  namespace: ws3
  annotations:
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
spec:
  ingressClassName: nginx
  rules:
  - host: cs1-146.190.202.84.nip.io
    http: 
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ws3-cs-svc
            port:
              number: 8443
---